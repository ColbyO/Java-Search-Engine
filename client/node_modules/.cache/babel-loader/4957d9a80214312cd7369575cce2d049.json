{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Colby\\\\Documents\\\\school\\\\Semester 3\\\\Sprints\\\\Sprint Three\\\\Project One\\\\contact-book\\\\client\\\\src\\\\components\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // COMPONENTS\n\nimport NavBar from '../page components/NavBar'; // BOOTSTRAP\n\nimport { Container, Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Settings() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(); // Input setStates\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loading] = useState(false);\n  const [error, setError] = useState(\"\"); // get current user info for form\n\n  const getCurrentUser = async () => {\n    let currentUser = await axios({\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/currentuser\",\n      data: {\n        id: \"1001\"\n      }\n    }); // set res object to array\n\n    setCurrentUser(currentUser.data); // set users email to setstate\n\n    setEmail(currentUser.data.email);\n  }; // run function on launch\n\n\n  useEffect(() => {\n    getCurrentUser();\n  }, []); // update user settings function\n\n  const updateHandler = async e => {\n    e.preventDefault(); // check passwords\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match.\");\n    }\n\n    try {\n      const data = await axios({\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        url: \"http://localhost:5000/api/private/update/user\",\n        data: {\n          // id to find exact account in database\n          id: currentUser._id,\n          // email & password to update\n          email: email,\n          password: password\n        }\n      }); // if successful, push user back to search page\n\n      if (data) {\n        window.location = \"/\";\n      }\n    } catch (err) {\n      // show error if error\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"100vh\",\n        marginTop: \"-150px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100\",\n        style: {\n          maxWidth: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center mb-4\",\n              children: \"Update Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 11\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: updateHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                id: \"email\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  onChange: e => setEmail(e.target.value),\n                  placeholder: \"dd\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                id: \"password\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  onChange: e => setPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                id: \"password-confirm\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password Confirmation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  onChange: e => setConfirmPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: loading,\n                className: \"w-100 mt-3\",\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Settings, \"/GI3DTpvq1g62UdjF4nppnUMC4k=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/Colby/Documents/school/Semester 3/Sprints/Sprint Three/Project One/contact-book/client/src/components/pages/Settings.js"],"names":["React","useState","useEffect","axios","NavBar","Container","Form","Button","Card","Alert","Settings","currentUser","setCurrentUser","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","loading","error","setError","getCurrentUser","method","headers","Authorization","localStorage","getItem","url","data","id","updateHandler","e","preventDefault","setTimeout","_id","window","location","err","response","minHeight","marginTop","maxWidth","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,KAAxC,QAAqD,iBAArD;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C,CADgB,CAEhB;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACkB,OAAD,IAAYlB,QAAQ,CAAC,KAAD,CAA1B;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC,CARgB,CAUhB;;AACA,QAAMqB,cAAc,GAAG,YAAY;AAC/B,QAAIX,WAAW,GAAG,MAAMR,KAAK,CAAC;AAC1BoB,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD,OAFiB;AAM1BC,MAAAA,GAAG,EAAE,mDANqB;AAO1BC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAE;AADF;AAPoB,KAAD,CAA7B,CAD+B,CAY/B;;AACAlB,IAAAA,cAAc,CAACD,WAAW,CAACkB,IAAb,CAAd,CAb+B,CAc/B;;AACAf,IAAAA,QAAQ,CAACH,WAAW,CAACkB,IAAZ,CAAiBhB,KAAlB,CAAR;AACH,GAhBD,CAXgB,CA6BhB;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT,CA9BgB,CAkChB;;AACA,QAAMS,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF,GAD+B,CAG/B;;AACA,QAAGlB,QAAQ,KAAKE,eAAhB,EAAgC;AAC5BD,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAgB,MAAAA,UAAU,CAAC,MAAK;AACZb,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAGA,aAAOA,QAAQ,CAAC,yBAAD,CAAf;AACH;;AACD,QAAI;AACA,YAAMQ,IAAI,GAAI,MAAM1B,KAAK,CAAC;AACtBoB,QAAAA,MAAM,EAAE,KADc;AAEtBC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAELC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD,SAFa;AAMtBC,QAAAA,GAAG,EAAE,+CANiB;AAOtBC,QAAAA,IAAI,EAAE;AACF;AACAC,UAAAA,EAAE,EAAEnB,WAAW,CAACwB,GAFd;AAGF;AACAtB,UAAAA,KAAK,EAAEA,KAJL;AAKFE,UAAAA,QAAQ,EAAEA;AALR;AAPgB,OAAD,CAAzB,CADA,CAgBA;;AACA,UAAGc,IAAH,EAAQ;AACJO,QAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH;AACJ,KApBD,CAoBE,OAAOC,GAAP,EAAY;AACV;AACAjB,MAAAA,QAAQ,CAACD,KAAK,CAACmB,QAAN,CAAeV,IAAf,CAAoBT,KAArB,CAAR;AACAc,MAAAA,UAAU,CAAC,MAAI;AACXb,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AAEJ,GAxCD;;AA0CA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA,QAAC,SAAD;AACA,MAAA,SAAS,EAAC,kDADV;AAC6D,MAAA,KAAK,EAAE;AAAEmB,QAAAA,SAAS,EAAE,OAAb;AAAsBC,QAAAA,SAAS,EAAE;AAAjC,OADpE;AAAA,6BAEA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAA9B;AAAA,+BACA,QAAC,IAAD;AAAA,iCACA,QAAC,IAAD,CAAM,IAAN;AAAA,oCAEE;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAIGtB,KAAK,iBAAI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,QAAf;AAAA,wBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAJZ,eAME,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAEW,aAAhB;AAAA,sCAEE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAC,OAAf;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,OAAnB;AAA2B,kBAAA,QAAQ,EAAGC,CAAD,IAAMlB,QAAQ,CAACkB,CAAC,CAACW,MAAF,CAASC,KAAV,CAAnD;AAAqE,kBAAA,WAAW,EAAC,IAAjF;AAAsF,kBAAA,QAAQ;AAA9F;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAOE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAC,UAAf;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,UAAnB;AAA8B,kBAAA,QAAQ,EAAGZ,CAAD,IAAMhB,WAAW,CAACgB,CAAC,CAACW,MAAF,CAASC,KAAV,CAAzD;AAA2E,kBAAA,QAAQ;AAAnF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAC,kBAAf;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,UAAnB;AAA8B,kBAAA,QAAQ,EAAGZ,CAAD,IAAMd,kBAAkB,CAACc,CAAC,CAACW,MAAF,CAASC,KAAV,CAAhE;AAAkF,kBAAA,QAAQ;AAA1F;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAiBE,QAAC,MAAD;AAAQ,gBAAA,QAAQ,EAAEzB,OAAlB;AAA2B,gBAAA,SAAS,EAAC,YAArC;AAAkD,gBAAA,IAAI,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH;;GArHQT,Q;;KAAAA,Q;AAuHT,eAAeA,QAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n// COMPONENTS\r\nimport NavBar from '../page components/NavBar'\r\n// BOOTSTRAP\r\nimport { Container, Form, Button, Card, Alert } from \"react-bootstrap\"\r\n\r\n\r\nfunction Settings() {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    // Input setStates\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const [loading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // get current user info for form\r\n    const getCurrentUser = async () => {\r\n        let currentUser = await axios({\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n            },\r\n            url: \"http://localhost:5000/api/private/get/currentuser\",\r\n            data: {\r\n                id: \"1001\"\r\n            }\r\n        })\r\n        // set res object to array\r\n        setCurrentUser(currentUser.data)\r\n        // set users email to setstate\r\n        setEmail(currentUser.data.email)\r\n    }\r\n\r\n    // run function on launch\r\n    useEffect(() => {\r\n        getCurrentUser()\r\n    }, [])\r\n\r\n    // update user settings function\r\n    const updateHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // check passwords\r\n        if(password !== confirmPassword){\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n            setTimeout(()=> {\r\n                setError(\"\")\r\n            }, 5000)\r\n            return setError(\"Passwords do not match.\")\r\n        }\r\n        try {\r\n            const data  = await axios({\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n                },\r\n                url: \"http://localhost:5000/api/private/update/user\",\r\n                data: {\r\n                    // id to find exact account in database\r\n                    id: currentUser._id,\r\n                    // email & password to update\r\n                    email: email,\r\n                    password: password\r\n                }\r\n            })\r\n            // if successful, push user back to search page\r\n            if(data){\r\n                window.location = \"/\"\r\n            }\r\n        } catch (err) {\r\n            // show error if error\r\n            setError(error.response.data.error)\r\n            setTimeout(()=>{\r\n                setError(\"\")\r\n            }, 5000)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n        <Container\r\n        className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\", marginTop: \"-150px\" }}>\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n        <Card.Body>\r\n          {/******************* TITLE *******************/}\r\n          <h2 className=\"text-center mb-4\">Update Settings</h2>\r\n          {/******************* IF ERORR *******************/}\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {/******************* FORM *******************/}\r\n          <Form onSubmit={updateHandler}>   \r\n            {/******************* EMAIL *******************/}         \r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" onChange={(e)=> setEmail(e.target.value)} placeholder=\"dd\" required />\r\n            </Form.Group>\r\n            {/******************* PASSWORD *******************/}\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" onChange={(e)=> setPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            {/******************* CONFIRM PASSWORD *******************/}\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" onChange={(e)=> setConfirmPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            {/******************* UPDATE BUTTON *******************/}\r\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n        </div>\r\n      </Container>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Settings"]},"metadata":{},"sourceType":"module"}