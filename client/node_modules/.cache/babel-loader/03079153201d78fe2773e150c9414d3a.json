{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Colby\\\\Documents\\\\school\\\\Semester 3\\\\Sprints\\\\Sprint Three\\\\Project One\\\\contact-book\\\\client\\\\src\\\\components\\\\pages\\\\inFolder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport NavBar from '../page components/NavBar';\nimport AddFolder from '../page components/AddFolder';\nimport Folder from '../page components/Folder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InFolder() {\n  _s();\n\n  let {\n    folderid\n  } = useParams();\n\n  const getCurrentFolder = async () => {\n    let getcurrentFolder = await axios({\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/currentfolder\",\n      data: {\n        id: folderid\n      }\n    });\n    setCurrentFolder(getcurrentFolder.data);\n    console.log(currentFolder.map(keyWord => keyWord.folderName));\n  };\n\n  useEffect(() => {\n    getCurrentFolder();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: folderid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InFolder, \"6SUFtxjoRl9af73AknsJTvpDY1Y=\", false, function () {\n  return [useParams];\n});\n\n_c = InFolder;\nexport default InFolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"InFolder\");","map":{"version":3,"sources":["C:/Users/Colby/Documents/school/Semester 3/Sprints/Sprint Three/Project One/contact-book/client/src/components/pages/inFolder.js"],"names":["React","useEffect","useParams","axios","NavBar","AddFolder","Folder","InFolder","folderid","getCurrentFolder","getcurrentFolder","method","headers","Authorization","localStorage","getItem","url","data","id","setCurrentFolder","console","log","currentFolder","map","keyWord","folderName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,MAAI;AAAEC,IAAAA;AAAF,MAAeN,SAAS,EAA5B;;AACA,QAAMO,gBAAgB,GAAG,YAAY;AACjC,QAAIC,gBAAgB,GAAG,MAAMP,KAAK,CAAC;AAC/BQ,MAAAA,MAAM,EAAE,KADuB;AAE/BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD,OAFsB;AAM/BC,MAAAA,GAAG,EAAE,qDAN0B;AAO/BC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAEV;AADF;AAPyB,KAAD,CAAlC;AAWAW,IAAAA,gBAAgB,CAACT,gBAAgB,CAACO,IAAlB,CAAhB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAa,CAACC,GAAd,CAAkBC,OAAO,IAAGA,OAAO,CAACC,UAApC,CAAZ;AACP,GAdG;;AAeJxB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAII,sBACI;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1BQD,Q;UACcL,S;;;KADdK,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NavBar from '../page components/NavBar';\r\nimport AddFolder from '../page components/AddFolder';\r\nimport Folder from '../page components/Folder';\r\n\r\nfunction InFolder() {\r\n    let { folderid } = useParams();\r\n    const getCurrentFolder = async () => {\r\n        let getcurrentFolder = await axios({\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n            },\r\n            url: \"http://localhost:5000/api/private/get/currentfolder\",\r\n            data: {\r\n                id: folderid\r\n            }\r\n        })\r\n        setCurrentFolder(getcurrentFolder.data)\r\n        console.log(currentFolder.map(keyWord=> keyWord.folderName))\r\n}\r\nuseEffect(() => {\r\n    getCurrentFolder()\r\n}, [])\r\n\r\n    return (\r\n        <div>\r\n            {folderid}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InFolder\r\n"]},"metadata":{},"sourceType":"module"}