{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Colby\\\\Documents\\\\school\\\\Semester 3\\\\Sprints\\\\Sprint Three\\\\Project One\\\\contact-book\\\\client\\\\src\\\\components\\\\pages\\\\inFolder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport NavBar from '../page components/NavBar';\nimport AddFolder from '../page components/AddFolder';\nimport Folder from '../page components/Folder';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InFolder() {\n  _s();\n\n  let {\n    folderid\n  } = useParams();\n  let history = useHistory();\n  const [user, setUser] = useState([]);\n  const [currentFolder, setCurrentFolder] = useState([]);\n  const [contents, setContents] = useState([]);\n\n  const getCurrentUser = async () => {\n    let currentUser = await axios({\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/currentuser\"\n    });\n    setUser(currentUser.data);\n  };\n\n  useEffect(() => {\n    getCurrentUser();\n  }, []);\n\n  const getCurrentFolder = async () => {\n    let getcurrentFolder = await axios({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/currentfolder\",\n      data: {\n        id: folderid\n      }\n    });\n    setCurrentFolder(getcurrentFolder.data);\n  };\n\n  useEffect(() => {\n    getCurrentFolder();\n  }, []);\n\n  const getFolderContents = async () => {\n    let folderContents = await axios({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/bookmarkcontent\",\n      data: {\n        folderID: folderid\n      }\n    });\n    console.log(folderContents.data);\n    setContents(folderContents.data);\n  };\n\n  useEffect(() => {\n    getFolderContents();\n  }, []);\n\n  const getContact = async () => {\n    await contents.map(keyWord => {\n      // let contacts = axios({\n      //     method: \"POST\",\n      //     headers: {\n      //         \"Content-Type\": \"application/json\",\n      //         Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      //     },\n      //     url: \"http://localhost:5000/api/private/get/contactbyid\",\n      //     data: {\n      //         id: keyWord.contactID\n      //     }\n      // })})\n      console.log(keyWord.contactID);\n    });\n  };\n\n  useEffect(() => {\n    getContact();\n  }, []);\n\n  const deleteFolder = async () => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      let deleteF = await axios({\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        url: \"http://localhost:5000/api/private/delete/folder\",\n        data: {\n          id: folderid\n        }\n      });\n      alert(\"Successfully deleted\");\n      history.goBack();\n    } else {\n      console.log(\"didnt delete\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginLeft: \"86.9%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => deleteFolder(),\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddFolder, {\n        currentUser: user,\n        currentFolder: currentFolder,\n        folderid: folderid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: \"10px\"\n      },\n      children: currentFolder.map(keyWord => /*#__PURE__*/_jsxDEV(Folder, {\n        currentFolder: keyWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InFolder, \"tgoU0gvYA+vDba0ZtZNQ0vLU2dA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = InFolder;\nexport default InFolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"InFolder\");","map":{"version":3,"sources":["C:/Users/Colby/Documents/school/Semester 3/Sprints/Sprint Three/Project One/contact-book/client/src/components/pages/inFolder.js"],"names":["React","useState","useEffect","useParams","useHistory","axios","NavBar","AddFolder","Folder","IconButton","DeleteIcon","InFolder","folderid","history","user","setUser","currentFolder","setCurrentFolder","contents","setContents","getCurrentUser","currentUser","method","headers","Authorization","localStorage","getItem","url","data","getCurrentFolder","getcurrentFolder","id","getFolderContents","folderContents","folderID","console","log","getContact","map","keyWord","contactID","deleteFolder","window","confirm","deleteF","alert","goBack","marginLeft","display","flexWrap","justifyContent","alignItems","gap"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NavBar from '../page components/NavBar';\r\nimport AddFolder from '../page components/AddFolder';\r\nimport Folder from '../page components/Folder';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction InFolder() {\r\n    let { folderid } = useParams();\r\n    let history = useHistory();\r\n    const [user, setUser] = useState([])\r\n    const [currentFolder, setCurrentFolder] = useState([])\r\n    const [contents, setContents] = useState([])\r\n\r\n    const getCurrentUser = async () => {\r\n        let currentUser = await axios({\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n            },\r\n            url: \"http://localhost:5000/api/private/get/currentuser\",\r\n        })\r\n        setUser(currentUser.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCurrentUser()\r\n    }, [])\r\n\r\n    const getCurrentFolder = async () => {\r\n        let getcurrentFolder = await axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n            },\r\n            url: \"http://localhost:5000/api/private/get/currentfolder\",\r\n            data: {\r\n                id: folderid\r\n            }\r\n        })\r\n            setCurrentFolder(getcurrentFolder.data)\r\n        }\r\n    useEffect(() => {\r\n        getCurrentFolder()\r\n    }, [])\r\n\r\n    const getFolderContents = async () => {\r\n        let folderContents = await axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n            },\r\n            url: \"http://localhost:5000/api/private/get/bookmarkcontent\",\r\n            data: {\r\n                folderID: folderid\r\n            }\r\n        })\r\n        console.log(folderContents.data)\r\n        setContents(folderContents.data)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getFolderContents()\r\n    }, [])\r\n\r\n    const getContact = async () => {\r\n        await contents.map(keyWord =>  {\r\n        // let contacts = axios({\r\n        //     method: \"POST\",\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        //     },\r\n        //     url: \"http://localhost:5000/api/private/get/contactbyid\",\r\n        //     data: {\r\n        //         id: keyWord.contactID\r\n        //     }\r\n        // })})\r\n        console.log(keyWord.contactID)})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getContact()\r\n    },[])\r\n\r\n    const deleteFolder = async () => {\r\n        if (window.confirm(\"Are you sure you want to delete this contact?\")) {\r\n            let deleteF = await axios({\r\n                method:\"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n                },\r\n                url: \"http://localhost:5000/api/private/delete/folder\",\r\n                data: {\r\n                    id: folderid\r\n                }\r\n            })\r\n            alert(\"Successfully deleted\")\r\n            history.goBack()\r\n        } else {\r\n            console.log(\"didnt delete\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <section style={{marginLeft: \"86.9%\"}}>\r\n            <IconButton onClick={()=> deleteFolder()}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n            <AddFolder currentUser={user} currentFolder={currentFolder} folderid={folderid} />\r\n            </section>\r\n            <section style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\", gap: \"10px\"}} >\r\n            {\r\n                currentFolder.map(keyWord=> <Folder currentFolder={keyWord} />)\r\n            }\r\n            </section>\r\n            <section>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InFolder\r\n"]},"metadata":{},"sourceType":"module"}