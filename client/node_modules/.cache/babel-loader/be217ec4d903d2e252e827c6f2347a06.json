{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Colby\\\\Documents\\\\school\\\\Semester 3\\\\Sprints\\\\Sprint Three\\\\Project One\\\\contact-book\\\\client\\\\src\\\\components\\\\page components\\\\AddFavorite.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport { IconButton, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddFolderButton({\n  currentContact,\n  contacts\n}) {\n  _s();\n\n  const [allFolders, setAllFolders] = useState([]);\n  const [selectFolder, setSelectFolder] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const getAllFolders = async () => {\n    let Folders = await axios({\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/folders\"\n    });\n    console.log(Folders.data);\n    setAllFolders(Folders.data);\n  };\n\n  const addToFolder = async () => {\n    console.log(contacts); // all info (eg. firstname, lastname, etc)\n\n    console.log(currentContact); // id (eg. 1078)\n\n    if (contacts[0].firstname === undefined) {\n      let toFolder = await axios({\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        url: \"http://localhost:5000/api/private/addto/folder\",\n        data: {\n          contactID: JSON.parse(currentContact),\n          folderID: selectFolder,\n          firstname: contacts.firstname,\n          lastname: contacts.lastname,\n          email: contacts.email,\n          phone: contacts.phone,\n          company: contacts.company,\n          department: contacts.department,\n          jobtitle: contacts.jobtitle\n        }\n      });\n\n      if (toFolder.status === 200) {\n        alert(\"Successfully added to Folder\");\n      }\n    } else {\n      let toFolder = await axios({\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        url: \"http://localhost:5000/api/private/addto/folder\",\n        data: {\n          contactID: JSON.parse(currentContact),\n          folderID: selectFolder,\n          firstname: contacts[0].firstname || contacts.firstname,\n          lastname: contacts[0].lastname || contacts.lastname,\n          email: contacts[0].email || contacts.email,\n          phone: contacts[0].phone || contacts.phone,\n          company: contacts[0].company || contacts.company,\n          department: contacts[0].department || contacts.department,\n          jobtitle: contacts[0].jobtitle || contacts.jobtitle\n        }\n      });\n\n      if (toFolder.status === 200) {\n        alert(\"Successfully added to Folder\");\n      }\n    }\n  };\n\n  function openModal() {\n    setOpen(true);\n    getAllFolders();\n  }\n\n  function closeModal() {\n    setOpen(false);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  function handleChange(e) {\n    setSelectFolder(e.target.value);\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: openModal,\n      variant: \"outline-success\",\n      size: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: open,\n      onHide: closeModal,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"folder-select-label\",\n              children: \"Choose Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: handleChange,\n              value: selectFolder,\n              labelId: \"folder-select-label\",\n              style: {\n                width: \"200px\"\n              },\n              children: allFolders.map(keyWord => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: keyWord._id,\n                children: keyWord.folderName\n              }, keyWord._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 51\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: closeModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            onClick: addToFolder,\n            children: \"Add Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddFolderButton, \"9KtMqsY7P6nO+bivB6LKioe9fgc=\");\n\n_c = AddFolderButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFolderButton\");","map":{"version":3,"sources":["C:/Users/Colby/Documents/school/Semester 3/Sprints/Sprint Three/Project One/contact-book/client/src/components/page components/AddFavorite.js"],"names":["React","useState","useEffect","axios","Button","Modal","Form","IconButton","Select","MenuItem","InputLabel","FormControl","StarIcon","AddFolderButton","currentContact","contacts","allFolders","setAllFolders","selectFolder","setSelectFolder","open","setOpen","getAllFolders","Folders","method","headers","Authorization","localStorage","getItem","url","console","log","data","addToFolder","firstname","undefined","toFolder","contactID","JSON","parse","folderID","lastname","email","phone","company","department","jobtitle","status","alert","openModal","closeModal","handleSubmit","e","preventDefault","handleChange","target","value","width","map","keyWord","_id","folderName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,iBAApC;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,UAAtC,EAAkDC,WAAlD,QAAoE,mBAApE;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAGA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAzB,EAAuD;AAAA;;AAClE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,KAAD,CAAhC;;AAEF,QAAMqB,aAAa,GAAG,YAAY;AAC9B,QAAIC,OAAO,GAAG,MAAMpB,KAAK,CAAC;AACtBqB,MAAAA,MAAM,EAAE,KADc;AAEtBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFpD,OAFa;AAMxBC,MAAAA,GAAG,EAAE;AANmB,KAAD,CAAzB;AAQFC,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACS,IAApB;AACAf,IAAAA,aAAa,CAACM,OAAO,CAACS,IAAT,CAAb;AACD,GAXD;;AAaA,QAAMC,WAAW,GAAG,YAAY;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ,EAD8B,CACR;;AACtBe,IAAAA,OAAO,CAACC,GAAR,CAAYjB,cAAZ,EAF8B,CAEF;;AAC5B,QAAIC,QAAQ,CAAC,CAAD,CAAR,CAAYmB,SAAZ,KAA0BC,SAA9B,EAAyC;AACvC,UAAIC,QAAQ,GAAG,MAAMjC,KAAK,CAAC;AACzBqB,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFpD,SAFgB;AAM3BC,QAAAA,GAAG,EAAE,gDANsB;AAO3BG,QAAAA,IAAI,EAAE;AACFK,UAAAA,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWzB,cAAX,CADT;AAEF0B,UAAAA,QAAQ,EAAEtB,YAFR;AAGFgB,UAAAA,SAAS,EAAEnB,QAAQ,CAACmB,SAHlB;AAIFO,UAAAA,QAAQ,EAAE1B,QAAQ,CAAC0B,QAJjB;AAKFC,UAAAA,KAAK,EAAE3B,QAAQ,CAAC2B,KALd;AAMFC,UAAAA,KAAK,EAAE5B,QAAQ,CAAC4B,KANd;AAOFC,UAAAA,OAAO,EAAE7B,QAAQ,CAAC6B,OAPhB;AAQFC,UAAAA,UAAU,EAAE9B,QAAQ,CAAC8B,UARnB;AASFC,UAAAA,QAAQ,EAAE/B,QAAQ,CAAC+B;AATjB;AAPqB,OAAD,CAA1B;;AAmBJ,UAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH;AACE,KAvBD,MAuBO;AACL,UAAIZ,QAAQ,GAAG,MAAMjC,KAAK,CAAC;AACzBqB,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFpD,SAFgB;AAM3BC,QAAAA,GAAG,EAAE,gDANsB;AAO3BG,QAAAA,IAAI,EAAE;AACFK,UAAAA,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWzB,cAAX,CADT;AAEF0B,UAAAA,QAAQ,EAAEtB,YAFR;AAGFgB,UAAAA,SAAS,EAAEnB,QAAQ,CAAC,CAAD,CAAR,CAAYmB,SAAZ,IAAyBnB,QAAQ,CAACmB,SAH3C;AAIFO,UAAAA,QAAQ,EAAE1B,QAAQ,CAAC,CAAD,CAAR,CAAY0B,QAAZ,IAAwB1B,QAAQ,CAAC0B,QAJzC;AAKFC,UAAAA,KAAK,EAAE3B,QAAQ,CAAC,CAAD,CAAR,CAAY2B,KAAZ,IAAqB3B,QAAQ,CAAC2B,KALnC;AAMFC,UAAAA,KAAK,EAAE5B,QAAQ,CAAC,CAAD,CAAR,CAAY4B,KAAZ,IAAqB5B,QAAQ,CAAC4B,KANnC;AAOFC,UAAAA,OAAO,EAAE7B,QAAQ,CAAC,CAAD,CAAR,CAAY6B,OAAZ,IAAuB7B,QAAQ,CAAC6B,OAPvC;AAQFC,UAAAA,UAAU,EAAE9B,QAAQ,CAAC,CAAD,CAAR,CAAY8B,UAAZ,IAA0B9B,QAAQ,CAAC8B,UAR7C;AASFC,UAAAA,QAAQ,EAAE/B,QAAQ,CAAC,CAAD,CAAR,CAAY+B,QAAZ,IAAwB/B,QAAQ,CAAC+B;AATzC;AAPqB,OAAD,CAA1B;;AAmBJ,UAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH;AACE;AAEJ,GAnDC;;AAsDA,WAASC,SAAT,GAAqB;AACnB5B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,aAAa;AACd;;AAED,WAAS4B,UAAT,GAAsB;AACpB7B,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,WAAS8B,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACD;;AAED,WAASC,YAAT,CAAsBF,CAAtB,EAAwB;AACpBjC,IAAAA,eAAe,CAACiC,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAYqB,CAAC,CAACG,MAAF,CAASC,KAArB;AACH;;AAED,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEP,SAArB;AAAgC,MAAA,OAAO,EAAC,iBAAxC;AAA0D,MAAA,IAAI,EAAC,IAA/D;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE7B,IAAb;AAAmB,MAAA,MAAM,EAAE8B,UAA3B;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEC,YAAhB;AAAA,gCACA,QAAC,KAAD,CAAO,IAAP;AAAA,iCACE,QAAC,WAAD;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,QAAQ,EAAEG,YAAlB;AAAgC,cAAA,KAAK,EAAEpC,YAAvC;AAAqD,cAAA,OAAO,EAAC,qBAA7D;AAAmF,cAAA,KAAK,EAAE;AAACuC,gBAAAA,KAAK,EAAE;AAAR,eAA1F;AAAA,wBAEUzC,UAAU,CAAC0C,GAAX,CAAeC,OAAO,iBAAI,QAAC,QAAD;AAA4B,gBAAA,KAAK,EAAEA,OAAO,CAACC,GAA3C;AAAA,0BAAiDD,OAAO,CAACE;AAAzD,iBAAeF,OAAO,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,sBAA1B;AAFV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADA,eAWA,QAAC,KAAD,CAAO,MAAP;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAEV,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAwC,YAAA,OAAO,EAAEjB,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AA6BD;;GAvHuBpB,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {IconButton, Select, MenuItem, InputLabel, FormControl} from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\nexport default function AddFolderButton({ currentContact, contacts }) {\r\n    const [allFolders, setAllFolders] = useState([])\r\n    const [selectFolder, setSelectFolder] = useState('')\r\n    const [open, setOpen] = useState(false)\r\n\r\n  const getAllFolders = async () => {\r\n      let Folders = await axios({\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        },\r\n        url: \"http://localhost:5000/api/private/get/folders\",\r\n      })\r\n    console.log(Folders.data)\r\n    setAllFolders(Folders.data)\r\n  }\r\n\r\n  const addToFolder = async () => {\r\n    console.log(contacts) // all info (eg. firstname, lastname, etc)\r\n    console.log(currentContact) // id (eg. 1078)\r\n    if (contacts[0].firstname === undefined) {\r\n      let toFolder = await axios({\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n      },\r\n      url: \"http://localhost:5000/api/private/addto/folder\",\r\n      data: {\r\n          contactID: JSON.parse(currentContact),\r\n          folderID: selectFolder,\r\n          firstname: contacts.firstname,\r\n          lastname: contacts.lastname, \r\n          email: contacts.email,\r\n          phone: contacts.phone,\r\n          company: contacts.company,\r\n          department: contacts.department,\r\n          jobtitle: contacts.jobtitle\r\n      }\r\n    })\r\n  if (toFolder.status === 200) {\r\n      alert(\"Successfully added to Folder\")\r\n  }     \r\n    } else {\r\n      let toFolder = await axios({\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n      },\r\n      url: \"http://localhost:5000/api/private/addto/folder\",\r\n      data: {\r\n          contactID: JSON.parse(currentContact),\r\n          folderID: selectFolder,\r\n          firstname: contacts[0].firstname || contacts.firstname,\r\n          lastname: contacts[0].lastname || contacts.lastname, \r\n          email: contacts[0].email || contacts.email,\r\n          phone: contacts[0].phone || contacts.phone,\r\n          company: contacts[0].company || contacts.company,\r\n          department: contacts[0].department || contacts.department,\r\n          jobtitle: contacts[0].jobtitle || contacts.jobtitle\r\n      }\r\n    })\r\n  if (toFolder.status === 200) {\r\n      alert(\"Successfully added to Folder\")\r\n  }\r\n    }\r\n\r\n}\r\n\r\n\r\n  function openModal() {\r\n    setOpen(true)\r\n    getAllFolders()\r\n  }\r\n\r\n  function closeModal() {\r\n    setOpen(false)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n  }\r\n\r\n  function handleChange(e){\r\n      setSelectFolder(e.target.value)\r\n      console.log(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={openModal} variant=\"outline-success\" size=\"sm\">\r\n        <StarIcon />\r\n      </IconButton>\r\n      <Modal show={open} onHide={closeModal}>\r\n          <Form onSubmit={handleSubmit} >\r\n          <Modal.Body>\r\n            <FormControl>\r\n              <InputLabel id=\"folder-select-label\">Choose Folder</InputLabel>\r\n              <Select onChange={handleChange} value={selectFolder} labelId=\"folder-select-label\" style={{width: \"200px\"}}>\r\n                    {\r\n                        allFolders.map(keyWord => <MenuItem key={keyWord._id} value={keyWord._id}>{keyWord.folderName}</MenuItem>)\r\n                    }\r\n              </Select>\r\n            </FormControl>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeModal}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"success\" type=\"submit\" onClick={addToFolder}>\r\n              Add Folder\r\n            </Button>\r\n          </Modal.Footer>\r\n          </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}