{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Colby\\\\Documents\\\\school\\\\Semester 4\\\\Sprint 2\\\\searchengine\\\\client\\\\src\\\\components\\\\page components\\\\SearchCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // MATERIAL UI CORE\n\nimport { Paper, Avatar, Typography, ButtonGroup, IconButton } from '@material-ui/core'; // MATERIAL UI ICONS\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'; // PAGE COMPONENTS\n\nimport CardModal from './CardModal';\nimport EditModal from './EditModal';\nimport AddFavorite from './AddFavorite';\nimport Pagination from '../page components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchCards({\n  searchTerm\n}) {\n  _s();\n\n  // array of colors for avatar\n  const classes = [\"orange\", \"lightblue\", \"lightgray\", \"lightgreen\", \"lightred\"]; // Set Contact array for modals & functions\n\n  const [tableData, setTableData] = useState([]);\n  const [modalInfo, setModalInfo] = useState([]);\n  const [selectModal, setselectModal] = useState([]);\n  const [contact123, setContacts] = useState([]); // Modals\n\n  const [openModal, setOpenModal] = useState(false);\n  const [edit, setEdit] = useState(false); // Pagination\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(6);\n\n  const closeModalHandler = () => {\n    setOpenModal(false);\n    setEdit(false);\n  };\n\n  useEffect(() => {\n    setTableData(searchTerm);\n  }, [searchTerm]); // get current contact info of selected contact card\n\n  const getContactInfo = async () => {\n    let currentContact = await axios({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/contact\",\n      data: {\n        id: modalInfo.id\n      }\n    }); // if ._id must be mongodb, else must be postgresql\n\n    if (currentContact.data._id) {\n      setselectModal(currentContact.data);\n    } else {\n      setselectModal(currentContact.data[0]);\n    }\n  }; // delete contact\n\n\n  const deleteOneContact = async () => {\n    // confirm window\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      let deleteContact = await axios({\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        url: \"http://localhost:5000/api/private/delete/contact\",\n        data: {\n          id: contact123.id\n        }\n      });\n      window.location = \"/\";\n    } else {\n      console.log(\"DIDNT DELETE\");\n    }\n  }; // Get current posts\n\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = tableData.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        gap: \"25px\",\n        marginLeft: \"11%\"\n      },\n      children: [currentPosts.map(keyWord => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"320px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            width: \"300px\",\n            height: \"300px\",\n            boxShadow: \"0px 1px 10px 1px rgba(0,0,0,0.41)\",\n            borderRadius: \"15px\"\n          },\n          onClick: () => setContacts(keyWord),\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            style: {\n              backgroundColor: \"#0d6efd\",\n              height: \"45%\",\n              borderRadius: \"15px\",\n              boxShadow: \"0px 15px 22px 5px rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              style: {\n                transform: \"scale(0.8)\",\n                marginTop: \"2%\",\n                marginLeft: \"-10%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"Edit\",\n                  onClick: () => {\n                    setModalInfo(keyWord);\n                    setEdit(!edit);\n                    getContactInfo();\n                  },\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"Delete\",\n                  onClick: async () => {\n                    await getContactInfo();\n                    deleteOneContact();\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(AddFavorite, {\n                  currentContact: contact123.id,\n                  contacts: contact123\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              style: {\n                marginLeft: \"83%\",\n                marginTop: \"-16%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(OpenInNewIcon, {\n                  onClick: () => {\n                    setModalInfo(keyWord);\n                    setOpenModal(!openModal);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"rounded\",\n            style: {\n              marginLeft: \"44%\",\n              marginTop: \"-35px\",\n              color: \"black\",\n              transform: \"scale(2.0)\",\n              // search through and randomly pick color from array\n              backgroundColor: classes[Math.floor(Math.random() * 5)]\n            },\n            children: keyWord.firstname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            style: {\n              paddingTop: \"25px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"h5\",\n              style: {\n                marginTop: \"10px\",\n                textAlign: \"center\"\n              },\n              children: keyWord.firstname + \" \" + keyWord.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"h6\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: keyWord.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle1\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: keyWord.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle2\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: keyWord.jobtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, keyWord.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), openModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(CardModal, {\n          view: openModal,\n          info: modalInfo,\n          close: closeModalHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 30\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 113\n      }, this), edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(EditModal, {\n          view: edit,\n          close: closeModalHandler,\n          profile: modalInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 105\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"35%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: tableData.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchCards, \"RosLHN6eXLUwdqD+CYk6+jiZl8s=\");\n\n_c = SearchCards;\nexport default SearchCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCards\");","map":{"version":3,"sources":["C:/Users/Colby/Documents/school/Semester 4/Sprint 2/searchengine/client/src/components/page components/SearchCards.js"],"names":["React","useState","useEffect","axios","Paper","Avatar","Typography","ButtonGroup","IconButton","EditIcon","DeleteIcon","OpenInNewIcon","CardModal","EditModal","AddFavorite","Pagination","SearchCards","searchTerm","classes","tableData","setTableData","modalInfo","setModalInfo","selectModal","setselectModal","contact123","setContacts","openModal","setOpenModal","edit","setEdit","currentPage","setCurrentPage","postsPerPage","closeModalHandler","getContactInfo","currentContact","method","headers","Authorization","localStorage","getItem","url","data","id","_id","deleteOneContact","window","confirm","deleteContact","location","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","display","flexWrap","alignItems","gap","marginLeft","map","keyWord","height","width","boxShadow","borderRadius","backgroundColor","transform","marginTop","color","Math","floor","random","firstname","paddingTop","textAlign","lastname","department","company","jobtitle","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n// MATERIAL UI CORE\r\nimport { Paper, Avatar, Typography, ButtonGroup, IconButton } from '@material-ui/core'\r\n// MATERIAL UI ICONS\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n// PAGE COMPONENTS\r\nimport CardModal from './CardModal';\r\nimport EditModal from './EditModal'\r\nimport AddFavorite from './AddFavorite'\r\nimport Pagination from '../page components/Pagination';\r\n\r\nfunction SearchCards({searchTerm}) {\r\n    // array of colors for avatar\r\n    const classes = [\"orange\", \"lightblue\", \"lightgray\", \"lightgreen\", \"lightred\"]\r\n\r\n    // Set Contact array for modals & functions\r\n    const [tableData, setTableData] = useState([])\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [selectModal, setselectModal] = useState([]);\r\n    const [contact123, setContacts] = useState([])\r\n    // Modals\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    // Pagination\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(6);\r\n\r\n    const closeModalHandler = () => {\r\n        setOpenModal(false)\r\n        setEdit(false)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setTableData(searchTerm)\r\n    },[searchTerm])\r\n\r\n    // get current contact info of selected contact card\r\n    const getContactInfo = async () => {\r\n        let currentContact = await axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n            },\r\n            url: \"http://localhost:5000/api/private/get/contact\",\r\n            data: {\r\n                id: modalInfo.id\r\n            }\r\n        })\r\n        // if ._id must be mongodb, else must be postgresql\r\n        if (currentContact.data._id) {\r\n            setselectModal(currentContact.data)\r\n        } else {\r\n            setselectModal(currentContact.data[0])\r\n        }\r\n\r\n    }\r\n    // delete contact\r\n    const deleteOneContact = async () => {\r\n        // confirm window\r\n        if (window.confirm(\"Are you sure you want to delete this contact?\")) {\r\n            let deleteContact = await axios({\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n                },\r\n                url: \"http://localhost:5000/api/private/delete/contact\",\r\n                data: {\r\n                    id: contact123.id\r\n                }\r\n            })\r\n            window.location=\"/\"\r\n        } else {\r\n            console.log(\"DIDNT DELETE\")\r\n        }\r\n    } \r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = tableData.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div>\r\n        <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems: \"center\", gap: \"25px\", marginLeft: \"11%\"}}>\r\n            {/* Map through searched contacts */}\r\n        {\r\n            currentPosts.map(keyWord => \r\n                <div style={{height: \"320px\"}}>\r\n                <Paper style={{width: \"300px\", height: \"300px\", boxShadow: \"0px 1px 10px 1px rgba(0,0,0,0.41)\", borderRadius: \"15px\"}} key={keyWord.id} onClick={()=> setContacts(keyWord)}>\r\n                    <header style={{backgroundColor: \"#0d6efd\", height: \"45%\", borderRadius: \"15px\", boxShadow: \"0px 15px 22px 5px rgba(0,0,0,0.1)\"}}>\r\n                    <section style={{transform: \"scale(0.8)\", marginTop: \"2%\", marginLeft: \"-10%\"}}>\r\n                        {/* Edit and Delete Buttons */}\r\n                            <ButtonGroup>\r\n                                <IconButton aria-label=\"Edit\" onClick={()=> {\r\n                                        setModalInfo(keyWord)\r\n                                        setEdit(!edit)\r\n                                        getContactInfo()\r\n                                    }}  >\r\n                                    <EditIcon/>\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"Delete\" onClick={async ()=> {\r\n                                        await getContactInfo()\r\n                                        deleteOneContact()\r\n                                    }} >\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                                <AddFavorite currentContact={contact123.id} contacts={contact123}/>\r\n                            </ButtonGroup> \r\n                        </section>\r\n                        <section style={{marginLeft: \"83%\", marginTop: \"-16%\"}}>\r\n                            {/* Expand info button */}\r\n                        <IconButton>\r\n                            <OpenInNewIcon onClick={()=> {\r\n                            setModalInfo(keyWord)\r\n                            setOpenModal(!openModal)\r\n                            }}  />\r\n                        </IconButton>\r\n                        </section>\r\n                    </header>\r\n                {/* Avatar */}\r\n                <Avatar variant=\"rounded\"\r\n                style={{marginLeft: \"44%\", \r\n                marginTop: \"-35px\", \r\n                color: \"black\",\r\n                transform: \"scale(2.0)\", \r\n                // search through and randomly pick color from array\r\n                backgroundColor: classes[Math.floor(Math.random() * 5)]}}>{keyWord.firstname[0]}</Avatar>\r\n                {/* Contact info */}\r\n                <section style={{paddingTop: \"25px\"}}>\r\n                <Typography align=\"left\" variant=\"h5\" style={{marginTop: \"10px\", textAlign: \"center\"}} >{keyWord.firstname + \" \" + keyWord.lastname}</Typography>\r\n                <Typography align=\"left\" variant=\"h6\" style={{textAlign: \"center\"}}>{keyWord.department}</Typography>\r\n                <Typography align=\"left\" variant=\"subtitle1\" style={{textAlign: \"center\"}}>{keyWord.company}</Typography>\r\n                <Typography align=\"left\" variant=\"subtitle2\" style={{textAlign: \"center\"}}>{keyWord.jobtitle}</Typography>\r\n                </section>\r\n\r\n            </Paper>\r\n            </div>\r\n                )\r\n        }\r\n        <div>\r\n\r\n      </div>\r\n        {/* Expand Info Modal */}\r\n      {\r\n          openModal ? <div > <CardModal view={openModal} info={modalInfo} close={closeModalHandler} /> </div> : <p></p>\r\n      }\r\n      {/* Edit Modal */}\r\n      {\r\n          edit ? <div ><EditModal view={edit} close={closeModalHandler} profile={modalInfo} /></div>  : <p></p>\r\n      }\r\n      </div>\r\n      {/* Pagination numbers at the bottom */}\r\n      <div style={{marginLeft: \"35%\"}}>\r\n      <Pagination \r\n        postsPerPage={postsPerPage}\r\n        totalPosts={tableData.length}\r\n        paginate={paginate}\r\n\r\n      />\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCards\r\n"]},"metadata":{},"sourceType":"module"}