{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Colby\\\\Documents\\\\school\\\\Semester 4\\\\Sprint 2\\\\searchengine\\\\client\\\\src\\\\components\\\\pages\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // COMPONENTS\n\nimport ListSearches from '../page components/ListSearches';\nimport NavBar from '../page components/NavBar';\nimport SQLDataService from '../services/SQL';\nimport MongoDBDataService from '../services/MongoDB'; // BOOTSTRAP\n\nimport { Container, InputGroup, Dropdown, DropdownButton, FormControl as FormControlBoot, Button as ButtonBoot, Modal, Form } from 'react-bootstrap'; // MATERIAL UI\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { FormControl, Radio, RadioGroup, FormControlLabel, FormLabel, Button, IconButton } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchPage({\n  history\n}) {\n  _s();\n\n  // Input setState\n  const [username, setUsername] = useState(localStorage.getItem(\"username\"));\n  const [search, setSearch] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(); // Select database button\n\n  const [database, setDatabase] = useState(\"Database\"); // Filter \n\n  const [radio, setRadio] = useState('firstname'); // database button color\n\n  const [databaseColor, setDatabaseColor] = useState(\"outline-secondary\"); // modal\n\n  const [open, setOpen] = useState(false); // Search Database function\n\n  const getAllContacts = async () => {\n    if (search === \"\") {\n      alert(\"Not searching anything!\");\n    } else {\n      if (database === \"PostgreSQL\") {\n        if (radio === \"firstname\") {\n          if (search === \"\") {\n            await axios.all([SQLDataService.getAll(), MongoDBDataService.createLogs({\n              username: username,\n              searchTerm: searchTerm,\n              searchQuery: radio,\n              database: database\n            })]).then(axios.spread((data1, data2) => {\n              setSearchTerm(data1.data.rows);\n              throw data2;\n            }));\n          } else {\n            await axios.all([SQLDataService.findByFirstName(search), MongoDBDataService.createLogs({\n              username: username,\n              searchTerm: searchTerm,\n              searchQuery: radio,\n              database: database\n            })]).then(axios.spread((data1, data2) => {\n              setSearchTerm(data1.data.rows);\n              throw data2;\n            }));\n          }\n        }\n\n        if (radio === \"lastname\") {\n          await axios.all([SQLDataService.findByLastName(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"email\") {\n          await axios.all([SQLDataService.findByEmail(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"phone\") {\n          await axios.all([SQLDataService.findByPhoneNumber(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"company\") {\n          await axios.all([SQLDataService.findByCompany(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"department\") {\n          await axios.all([SQLDataService.findByDepartment(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"jobtitle\") {\n          await axios.all([SQLDataService.findByJobTitle(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n      }\n\n      if (database === \"MongoDB\") {\n        if (radio === \"firstname\") {\n          if (search === \"\") {\n            await axios.all([MongoDBDataService.getAll(), MongoDBDataService.createLogs({\n              username: username,\n              searchTerm: searchTerm,\n              searchQuery: radio,\n              database: database\n            })]).then(axios.spread((data1, data2) => {\n              setSearchTerm(data1.data.rows);\n              throw data2;\n            }));\n          } else {\n            await axios.all([MongoDBDataService.findByFirstName(search), MongoDBDataService.createLogs({\n              username: username,\n              searchTerm: searchTerm,\n              searchQuery: radio,\n              database: database\n            })]).then(axios.spread((data1, data2) => {\n              setSearchTerm(data1.data.rows);\n              throw data2;\n            }));\n          }\n        }\n\n        if (radio === \"lastname\") {\n          await axios.all([MongoDBDataService.findByLastName(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"email\") {\n          await axios.all([MongoDBDataService.findByEmail(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"phone\") {\n          await axios.all([MongoDBDataService.findByPhoneNumber(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"company\") {\n          await axios.all([MongoDBDataService.findByCompany(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"department\") {\n          await axios.all([MongoDBDataService.findByDepartment(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n\n        if (radio === \"jobtitle\") {\n          await axios.all([MongoDBDataService.findByJobTitle(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2) => {\n            setSearchTerm(data1.data.rows);\n            throw data2;\n          }));\n        }\n      }\n\n      if (database === \"Both\") {\n        if (radio === \"firstname\") {\n          if (search === \"\") {\n            await axios.all([MongoDBDataService.getAll(), SQLDataService.getAll(), MongoDBDataService.createLogs({\n              username: username,\n              searchTerm: searchTerm,\n              searchQuery: radio,\n              database: database\n            })]).then(axios.spread((data1, data2, data3) => {\n              // combines both array's\n              Array.prototype.push.apply(data1.data.rows, data2.data);\n              setSearchTerm(data1.data.rows);\n              throw data3;\n            }));\n          } else {\n            await axios.all([MongoDBDataService.findByFirstName(search), SQLDataService.findByFirstName(search), MongoDBDataService.createLogs({\n              username: username,\n              searchTerm: searchTerm,\n              searchQuery: radio,\n              database: database\n            })]).then(axios.spread((data1, data2, data3) => {\n              // combines both array's\n              Array.prototype.push.apply(data1.data.rows, data2.data);\n              setSearchTerm(data1.data.rows);\n              throw data3;\n            }));\n          }\n        }\n\n        if (radio === \"lastname\") {\n          await axios.all([MongoDBDataService.findByLastName(search), SQLDataService.findByLastName(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2, data3) => {\n            // combines both array's\n            Array.prototype.push.apply(data1.data.rows, data2.data);\n            setSearchTerm(data1.data.rows);\n            throw data3;\n          }));\n        }\n\n        if (radio === \"email\") {\n          await axios.all([MongoDBDataService.findByEmail(search), SQLDataService.findByEmail(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2, data3) => {\n            // combines both array's\n            Array.prototype.push.apply(data1.data.rows, data2.data);\n            setSearchTerm(data1.data.rows);\n            throw data3;\n          }));\n        }\n\n        if (radio === \"phone\") {\n          await axios.all([MongoDBDataService.findByPhoneNumber(search), SQLDataService.findByPhoneNumber(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2, data3) => {\n            // combines both array's\n            Array.prototype.push.apply(data1.data.rows, data2.data);\n            setSearchTerm(data1.data.rows);\n            throw data3;\n          }));\n        }\n\n        if (radio === \"company\") {\n          await axios.all([MongoDBDataService.findByCompany(search), SQLDataService.findByCompany(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2, data3) => {\n            // combines both array's\n            Array.prototype.push.apply(data1.data.rows, data2.data);\n            setSearchTerm(data1.data.rows);\n            throw data3;\n          }));\n        }\n\n        if (radio === \"department\") {\n          await axios.all([MongoDBDataService.findByDepartment(search), SQLDataService.findByDepartment(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2, data3) => {\n            // combines both array's\n            Array.prototype.push.apply(data1.data.rows, data2.data);\n            setSearchTerm(data1.data.rows);\n            throw data3;\n          }));\n        }\n\n        if (radio === \"jobtitle\") {\n          await axios.all([MongoDBDataService.findByJobTitle(search), SQLDataService.findByJobTitle(search), MongoDBDataService.createLogs({\n            username: username,\n            searchTerm: searchTerm,\n            searchQuery: radio,\n            database: database\n          })]).then(axios.spread((data1, data2, data3) => {\n            // combines both array's\n            Array.prototype.push.apply(data1.data.rows, data2.data);\n            setSearchTerm(data1.data.rows);\n            throw data3;\n          }));\n        }\n      }\n\n      if (database === \"Database\") {\n        return alert(\"No Database Selected!\");\n      }\n    }\n  }; // set filter state\n\n\n  const handleChange = event => {\n    setRadio(event.target.value);\n  }; // open filter modal\n\n\n  function openModal() {\n    setOpen(true);\n  } // close filter modal\n\n\n  function closeModal() {\n    setOpen(false);\n  } // prevent default for form\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          variant: databaseColor,\n          title: database,\n          id: \"input-group-dropdown-1\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#\",\n            onClick: () => {\n              setDatabase(\"PostgreSQL\");\n              setDatabaseColor(\"outline-primary\");\n            },\n            children: \"PostgreSQL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#\",\n            onClick: () => {\n              setDatabase(\"MongoDB\");\n              setDatabaseColor(\"outline-success\");\n            },\n            children: \"MongoDB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#\",\n            onClick: () => {\n              setDatabase(\"Both\");\n              setDatabaseColor(\"outline-warning\");\n            },\n            children: \"Both\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControlBoot, {\n          \"aria-label\": \"Text input with dropdown button\",\n          placeholder: \"Search...\",\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getAllContacts,\n          variant: \"contained\",\n          color: \"primary\",\n          disableElevation: true,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"filter\",\n          onClick: openModal,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          show: open,\n          onHide: closeModal,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Filter By:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-label\": \"filter\",\n                  name: \"filterby\",\n                  value: radio,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"firstname\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 75\n                    }, this),\n                    label: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"lastname\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 73\n                    }, this),\n                    label: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"email\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 70\n                    }, this),\n                    label: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"phone\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 70\n                    }, this),\n                    label: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"company\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 72\n                    }, this),\n                    label: \"Company\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"department\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 75\n                    }, this),\n                    label: \"Department\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"jobtitle\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 73\n                    }, this),\n                    label: \"Job Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: /*#__PURE__*/_jsxDEV(ButtonBoot, {\n                variant: \"primary\",\n                type: \"submit\",\n                onClick: closeModal,\n                children: \"Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: searchTerm ? /*#__PURE__*/_jsxDEV(ListSearches, {\n        searchTerm: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchPage, \"hcB8cuf4VN5SoQdFfkbDibRbXto=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/Colby/Documents/school/Semester 4/Sprint 2/searchengine/client/src/components/pages/SearchPage.js"],"names":["React","useState","useEffect","axios","ListSearches","NavBar","SQLDataService","MongoDBDataService","Container","InputGroup","Dropdown","DropdownButton","FormControl","FormControlBoot","Button","ButtonBoot","Modal","Form","MoreVertIcon","Radio","RadioGroup","FormControlLabel","FormLabel","IconButton","SearchPage","history","username","setUsername","localStorage","getItem","search","setSearch","searchTerm","setSearchTerm","database","setDatabase","radio","setRadio","databaseColor","setDatabaseColor","open","setOpen","getAllContacts","alert","all","getAll","createLogs","searchQuery","then","spread","data1","data2","data","rows","findByFirstName","findByLastName","findByEmail","findByPhoneNumber","findByCompany","findByDepartment","findByJobTitle","data3","Array","prototype","push","apply","handleChange","event","target","value","openModal","closeModal","handleSubmit","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n// COMPONENTS\r\nimport ListSearches from '../page components/ListSearches'\r\nimport NavBar from '../page components/NavBar'\r\nimport SQLDataService from '../services/SQL';\r\nimport MongoDBDataService from '../services/MongoDB';\r\n// BOOTSTRAP\r\nimport { Container, InputGroup, Dropdown, DropdownButton, FormControl as FormControlBoot, Button as ButtonBoot, Modal, Form } from 'react-bootstrap'\r\n// MATERIAL UI\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { FormControl, Radio, RadioGroup, FormControlLabel, FormLabel, Button, IconButton } from '@material-ui/core';\r\n\r\n\r\nfunction SearchPage({history}) {\r\n    // Input setState\r\n    const [username, setUsername] = useState(localStorage.getItem(\"username\"))\r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchTerm, setSearchTerm] = useState()\r\n    // Select database button\r\n    const [database, setDatabase] = useState(\"Database\")\r\n    // Filter \r\n    const [radio, setRadio] = useState('firstname');\r\n    // database button color\r\n    const [databaseColor, setDatabaseColor] = useState(\"outline-secondary\")\r\n    // modal\r\n    const [open, setOpen] = useState(false)\r\n\r\n    // Search Database function\r\n    const getAllContacts = async () => {\r\n        if (search === \"\") {\r\n            alert(\"Not searching anything!\")\r\n        } else {\r\n            if (database === \"PostgreSQL\") {\r\n                if (radio === \"firstname\") {\r\n                    if (search === \"\") {\r\n                        await axios.all([SQLDataService.getAll(), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then((axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        })))\r\n                    } else {\r\n                        await axios.all([SQLDataService.findByFirstName(search), \r\n                            MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                            .then((axios.spread((data1, data2) => {\r\n                                setSearchTerm(data1.data.rows)\r\n                                throw data2\r\n                            })))\r\n                    }\r\n                }\r\n                if (radio === \"lastname\") {\r\n                    await axios.all([SQLDataService.findByLastName(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"email\") {\r\n                    await axios.all([SQLDataService.findByEmail(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))  \r\n                }\r\n                if (radio === \"phone\") {\r\n                    await axios.all([SQLDataService.findByPhoneNumber(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"company\") {\r\n                    await axios.all([SQLDataService.findByCompany(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"department\") {\r\n                    await axios.all([SQLDataService.findByDepartment(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"jobtitle\") {\r\n                    await axios.all([SQLDataService.findByJobTitle(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n            }\r\n            if (database === \"MongoDB\") {\r\n                if (radio === \"firstname\") {\r\n                    if (search === \"\") {\r\n                        await axios.all([MongoDBDataService.getAll(), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then((axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        })))\r\n                    } else {\r\n                        await axios.all([MongoDBDataService.findByFirstName(search), \r\n                            MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                            .then((axios.spread((data1, data2) => {\r\n                                setSearchTerm(data1.data.rows)\r\n                                throw data2\r\n                            })))\r\n                    }\r\n                }\r\n                if (radio === \"lastname\") {\r\n                    await axios.all([MongoDBDataService.findByLastName(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"email\") {\r\n                    await axios.all([MongoDBDataService.findByEmail(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))  \r\n                }\r\n                if (radio === \"phone\") {\r\n                    await axios.all([MongoDBDataService.findByPhoneNumber(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"company\") {\r\n                    await axios.all([MongoDBDataService.findByCompany(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"department\") {\r\n                    await axios.all([MongoDBDataService.findByDepartment(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }\r\n                if (radio === \"jobtitle\") {\r\n                    await axios.all([MongoDBDataService.findByJobTitle(search), \r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2) => {\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data2\r\n                        }))\r\n                }                \r\n            }\r\n            if (database === \"Both\") {\r\n                if (radio === \"firstname\") {\r\n                    if (search === \"\") {\r\n                        await axios.all([MongoDBDataService.getAll(), SQLDataService.getAll(),\r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then((axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                        })))\r\n                    } else {\r\n                        await axios.all([MongoDBDataService.findByFirstName(search), SQLDataService.findByFirstName(search),\r\n                            MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                            .then((axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                            })))\r\n                    }\r\n                }\r\n                if (radio === \"lastname\") {\r\n                    await axios.all([MongoDBDataService.findByLastName(search), SQLDataService.findByLastName(search),\r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                        }))\r\n                }\r\n                if (radio === \"email\") {\r\n                    await axios.all([MongoDBDataService.findByEmail(search), SQLDataService.findByEmail(search),\r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                        }))  \r\n                }\r\n                if (radio === \"phone\") {\r\n                    await axios.all([MongoDBDataService.findByPhoneNumber(search), SQLDataService.findByPhoneNumber(search),\r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                        }))\r\n                }\r\n                if (radio === \"company\") {\r\n                    await axios.all([MongoDBDataService.findByCompany(search), SQLDataService.findByCompany(search),\r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                        }))\r\n                }\r\n                if (radio === \"department\") {\r\n                    await axios.all([MongoDBDataService.findByDepartment(search), SQLDataService.findByDepartment(search),\r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                        }))\r\n                }\r\n                if (radio === \"jobtitle\") {\r\n                    await axios.all([MongoDBDataService.findByJobTitle(search), SQLDataService.findByJobTitle(search),\r\n                        MongoDBDataService.createLogs({username: username, searchTerm: searchTerm, searchQuery: radio, database: database})])\r\n                        .then(axios.spread((data1, data2, data3) => {\r\n                            // combines both array's\r\n                            Array.prototype.push.apply(data1.data.rows, data2.data);\r\n                            setSearchTerm(data1.data.rows)\r\n                            throw data3\r\n                        }))\r\n                }\r\n            }\r\n            if (database === \"Database\") {\r\n                            return (\r\n                                alert(\"No Database Selected!\")\r\n                            )\r\n                        }\r\n        }\r\n    }\r\n    // set filter state\r\n    const handleChange = (event) => {\r\n        setRadio(event.target.value);\r\n      };\r\n\r\n      // open filter modal\r\n      function openModal() {\r\n        setOpen(true)\r\n      }\r\n    \r\n      // close filter modal\r\n      function closeModal() {\r\n        setOpen(false)\r\n      }\r\n    \r\n      // prevent default for form\r\n      function handleSubmit(e) {\r\n        e.preventDefault()\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n        <Container className=\"mt-5\">\r\n        {/**************************** CHOOSE DATABASE  ****************************/}\r\n        <InputGroup className=\"mb-3\">\r\n            <DropdownButton\r\n            variant={databaseColor}\r\n            title={database}\r\n            id=\"input-group-dropdown-1\"\r\n            >\r\n            {/**************************** CHOOSE POSTGRESQL DATABASE  ****************************/}\r\n            <Dropdown.Item href=\"#\" onClick={() => {\r\n                setDatabase(\"PostgreSQL\")\r\n                setDatabaseColor(\"outline-primary\")\r\n                }}>PostgreSQL</Dropdown.Item>\r\n            {/**************************** CHOOSE MONGODB DATABASE  ****************************/}\r\n            <Dropdown.Item href=\"#\" onClick={() => {\r\n                setDatabase(\"MongoDB\")\r\n                setDatabaseColor(\"outline-success\") \r\n                }}>MongoDB</Dropdown.Item>\r\n            {/**************************** CHOOSE BOTH DATABASES  ****************************/}\r\n            <Dropdown.Item href=\"#\" onClick={() => {\r\n                setDatabase(\"Both\")\r\n                setDatabaseColor(\"outline-warning\")\r\n            }}>Both</Dropdown.Item>\r\n            </DropdownButton>\r\n            {/**************************** SEARCH INPUT  ****************************/}\r\n            <FormControlBoot aria-label=\"Text input with dropdown button\" placeholder=\"Search...\" onChange={(e)=> setSearch(e.target.value)}/> \r\n            <Button onClick={getAllContacts} variant=\"contained\" color=\"primary\" disableElevation>Search</Button>\r\n            {/**************************** FILTER MODAL BUTTON  ****************************/}\r\n            <IconButton aria-label=\"filter\" onClick={openModal}>\r\n                <MoreVertIcon color=\"primary\"/>\r\n            </IconButton>\r\n            </InputGroup>\r\n            <>\r\n            {/**************************** FILTER MODAL  ****************************/}\r\n            <Modal show={open} onHide={closeModal}>\r\n                <Form onSubmit={handleSubmit} >\r\n                <Modal.Body>\r\n                    {/**************************** CHOOSE FILTER ****************************/}\r\n                        <FormControl component=\"fieldset\"  >\r\n                            <FormLabel component=\"legend\">Filter By:</FormLabel>\r\n                        <RadioGroup  aria-label=\"filter\" name=\"filterby\" value={radio} onChange={handleChange} >\r\n                            <FormControlLabel  value=\"firstname\" control={<Radio />} label=\"First Name\" />\r\n                            <FormControlLabel value=\"lastname\" control={<Radio  />} label=\"Last Name\" />\r\n                            <FormControlLabel value=\"email\" control={<Radio  />} label=\"Email\" />\r\n                            <FormControlLabel value=\"phone\" control={<Radio  />} label=\"Phone\" />\r\n                            <FormControlLabel value=\"company\" control={<Radio  />} label=\"Company\"  />\r\n                            <FormControlLabel value=\"department\" control={<Radio  />} label=\"Department\" />\r\n                            <FormControlLabel value=\"jobtitle\" control={<Radio  />} label=\"Job Title\" />\r\n                    </RadioGroup>\r\n                 </FormControl>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                {/**************************** APPLY FILTER  ****************************/}\r\n                  <ButtonBoot variant=\"primary\" type=\"submit\" onClick={closeModal}>\r\n                    Apply\r\n                  </ButtonBoot>\r\n                </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n          </>\r\n\r\n        </Container>\r\n        <Container>\r\n            {/**************************** LIST CONTACTS  ****************************/}\r\n            {\r\n                searchTerm ? \r\n                <ListSearches searchTerm={searchTerm} /> : <p></p>\r\n            }\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n"]},"metadata":{},"sourceType":"module"}