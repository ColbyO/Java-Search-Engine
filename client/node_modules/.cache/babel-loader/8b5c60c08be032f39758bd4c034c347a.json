{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Colby\\\\Documents\\\\school\\\\Semester 3\\\\Sprints\\\\Sprint Three\\\\Project One\\\\contact-book\\\\client\\\\src\\\\components\\\\page components\\\\SearchCards.js\",\n    _s = $RefreshSig$();\n\nimport { Paper, Avatar, Typography, ButtonGroup, IconButton } from '@material-ui/core';\nimport axios from 'axios';\nimport Pagination from '../page components/Pagination';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport React, { useState, useEffect } from 'react';\nimport CardModal from './CardModal';\nimport EditModal from './EditModal';\nimport AddFavorite from './AddFavorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchCards({\n  searchTerm\n}) {\n  _s();\n\n  const classes = [\"orange\", \"lightblue\", \"lightgray\", \"lightgreen\", \"lightred\"];\n  const [tableData, setTableData] = useState([]);\n  const [modalInfo, setModalInfo] = useState([]);\n  const [selectModal, setselectModal] = useState([]);\n  const [selectionModel, setSelectionModel] = useState([]);\n  const [contact123, setContacts] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(8);\n\n  const closeModalHandler = () => {\n    setOpenModal(false);\n    setEdit(false);\n  };\n\n  useEffect(() => {\n    setTableData(searchTerm);\n  }, [searchTerm]);\n\n  const getContactInfo = async () => {\n    let currentContact = await axios({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      },\n      url: \"http://localhost:5000/api/private/get/contact\",\n      data: {\n        id: modalInfo.id\n      }\n    });\n\n    if (currentContact.data._id) {\n      setselectModal(currentContact.data);\n    } else {\n      setselectModal(currentContact.data[0]);\n    }\n  }; // const getContact = async () => {\n  //     try {\n  //         let contacts = await axios({\n  //             method: \"POST\",\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\",\n  //                 Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n  //             },\n  //             url: \"http://localhost:5000/api/private/get/contactbyid\",\n  //             data: {\n  //                 id: selectModal[0]\n  //             }\n  //         }).then(data => {\n  //             setContacts(data.data)\n  //         })\n  //     } catch (err) {\n  //         console.error(err)\n  //     }\n  //     }\n  //     useEffect(()=> {\n  //         getContact()\n  //     },[])\n\n\n  const deleteOneContact = async () => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      let deleteContact = await axios({\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n        },\n        url: \"http://localhost:5000/api/private/delete/contact\",\n        data: {\n          id: contact123.id\n        }\n      });\n      console.log(deleteContact);\n    } else {\n      console.log(\"DIDNT DELETE\");\n    }\n  }; // Get current posts\n\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = tableData.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: \"10px\"\n      },\n      children: [currentPosts.map(keyWord => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"320px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            width: \"300px\",\n            height: \"300px\"\n          },\n          onClick: () => setContacts(keyWord),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"52.5%\",\n              marginTop: \"2%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Edit\",\n                onClick: () => {\n                  setModalInfo(keyWord);\n                  setEdit(!edit);\n                  getContactInfo();\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"Delete\",\n                onClick: async () => {\n                  await getContactInfo();\n                  deleteOneContact();\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AddFavorite, {\n                currentContact: contact123.id,\n                contacts: contact123\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            style: {\n              marginLeft: \"50%\",\n              marginTop: \"5px\",\n              color: \"black\",\n              transform: \"scale(2.0)\",\n              backgroundColor: classes[Math.floor(Math.random() * 5)]\n            },\n            children: keyWord.firstname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            style: {\n              textAlign: \"center\",\n              paddingTop: \"25px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"h5\",\n              style: {\n                marginLeft: \"10%\",\n                marginTop: \"10px\"\n              },\n              children: keyWord.firstname + \" \" + keyWord.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"h6\",\n              style: {\n                marginLeft: \"10%\"\n              },\n              children: keyWord.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle1\",\n              style: {\n                marginLeft: \"10%\"\n              },\n              children: keyWord.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle2\",\n              style: {\n                marginLeft: \"10%\"\n              },\n              children: keyWord.jobtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              marginLeft: \"83%\",\n              marginTop: \"-12%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(OpenInNewIcon, {\n              onClick: () => {\n                setModalInfo(keyWord);\n                setOpenModal(!openModal);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, keyWord.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), openModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(CardModal, {\n          view: openModal,\n          info: modalInfo,\n          close: closeModalHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 30\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 113\n      }, this), edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(EditModal, {\n          view: edit,\n          close: closeModalHandler,\n          profile: modalInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 105\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"35%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: tableData.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchCards, \"1OxfKSHhSYnd2eL9HOssxhx381g=\");\n\n_c = SearchCards;\nexport default SearchCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCards\");","map":{"version":3,"sources":["C:/Users/Colby/Documents/school/Semester 3/Sprints/Sprint Three/Project One/contact-book/client/src/components/page components/SearchCards.js"],"names":["Paper","Avatar","Typography","ButtonGroup","IconButton","axios","Pagination","EditIcon","DeleteIcon","OpenInNewIcon","React","useState","useEffect","CardModal","EditModal","AddFavorite","SearchCards","searchTerm","classes","tableData","setTableData","modalInfo","setModalInfo","selectModal","setselectModal","selectionModel","setSelectionModel","contact123","setContacts","openModal","setOpenModal","edit","setEdit","currentPage","setCurrentPage","postsPerPage","closeModalHandler","getContactInfo","currentContact","method","headers","Authorization","localStorage","getItem","url","data","id","_id","deleteOneContact","window","confirm","deleteContact","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","display","flexWrap","justifyContent","alignItems","gap","map","keyWord","height","width","marginLeft","marginTop","color","transform","backgroundColor","Math","floor","random","firstname","textAlign","paddingTop","lastname","department","company","jobtitle","length"],"mappings":"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","sourcesContent":["import { Paper, Avatar, Typography, ButtonGroup, IconButton,  } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport Pagination from '../page components/Pagination';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport React, {useState, useEffect} from 'react'\r\nimport CardModal from './CardModal';\r\nimport EditModal from './EditModal'\r\nimport AddFavorite from './AddFavorite'\r\n\r\nfunction SearchCards({searchTerm}) {\r\n    const classes = [\"orange\", \"lightblue\", \"lightgray\", \"lightgreen\", \"lightred\"]\r\n\r\n    const [tableData, setTableData] = useState([])\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [selectModal, setselectModal] = useState([]);\r\n    const [selectionModel, setSelectionModel] = useState([])\r\n    const [contact123, setContacts] = useState([])\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(8);\r\n\r\n    const closeModalHandler = () => {\r\n        setOpenModal(false)\r\n        setEdit(false)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setTableData(searchTerm)\r\n    },[searchTerm])\r\n\r\n    const getContactInfo = async () => {\r\n        let currentContact = await axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n            },\r\n            url: \"http://localhost:5000/api/private/get/contact\",\r\n            data: {\r\n                id: modalInfo.id\r\n            }\r\n        })\r\n        if (currentContact.data._id) {\r\n            setselectModal(currentContact.data)\r\n        } else {\r\n            setselectModal(currentContact.data[0])\r\n        }\r\n\r\n    }\r\n\r\n    // const getContact = async () => {\r\n    //     try {\r\n    //         let contacts = await axios({\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n    //             },\r\n    //             url: \"http://localhost:5000/api/private/get/contactbyid\",\r\n    //             data: {\r\n    //                 id: selectModal[0]\r\n    //             }\r\n    //         }).then(data => {\r\n    //             setContacts(data.data)\r\n    //         })\r\n    //     } catch (err) {\r\n    //         console.error(err)\r\n    //     }\r\n    //     }\r\n\r\n    //     useEffect(()=> {\r\n    //         getContact()\r\n    //     },[])\r\n\r\n    const deleteOneContact = async () => {\r\n        if (window.confirm(\"Are you sure you want to delete this contact?\")) {\r\n            let deleteContact = await axios({\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n                },\r\n                url: \"http://localhost:5000/api/private/delete/contact\",\r\n                data: {\r\n                    id: contact123.id\r\n                }\r\n            })\r\n            console.log(deleteContact)\r\n        } else {\r\n            console.log(\"DIDNT DELETE\")\r\n        }\r\n    } \r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = tableData.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div>\r\n        <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\", gap: \"10px\"}}>\r\n        {\r\n            currentPosts.map(keyWord => \r\n                <div style={{height: \"320px\"}}>\r\n                <Paper style={{width: \"300px\", height: \"300px\"}} key={keyWord.id} onClick={()=> setContacts(keyWord)}>\r\n                <div style={{marginLeft: \"52.5%\", marginTop: \"2%\"}}>\r\n                            <ButtonGroup>\r\n                                <IconButton aria-label=\"Edit\" onClick={()=> {\r\n                                        setModalInfo(keyWord)\r\n                                        setEdit(!edit)\r\n                                        getContactInfo()\r\n                                    }}  >\r\n                                    <EditIcon/>\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"Delete\" onClick={async ()=> {\r\n                                        await getContactInfo()\r\n                                        deleteOneContact()\r\n                                    }} >\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                                <AddFavorite currentContact={contact123.id} contacts={contact123}/>\r\n                            </ButtonGroup> \r\n                            </div>\r\n                <Avatar style={{marginLeft: \"50%\", marginTop: \"5px\", color: \"black\",transform: \"scale(2.0)\" ,backgroundColor: classes[Math.floor(Math.random() * 5)]}}>{keyWord.firstname[0]}</Avatar>\r\n                <section style={{textAlign: \"center\", paddingTop: \"25px\"}}>\r\n                <Typography align=\"left\" variant=\"h5\" style={{marginLeft: \"10%\", marginTop: \"10px\"}} >{keyWord.firstname + \" \" + keyWord.lastname}</Typography>\r\n                <Typography align=\"left\" variant=\"h6\" style={{marginLeft: \"10%\"}}>{keyWord.department}</Typography>\r\n                <Typography align=\"left\" variant=\"subtitle1\" style={{marginLeft: \"10%\"}}>{keyWord.company}</Typography>\r\n                <Typography align=\"left\" variant=\"subtitle2\" style={{marginLeft: \"10%\"}}>{keyWord.jobtitle}</Typography>\r\n                </section>\r\n                <IconButton style={{marginLeft: \"83%\", marginTop: \"-12%\"}}>\r\n                    <OpenInNewIcon onClick={()=> {\r\n                    setModalInfo(keyWord)\r\n                    setOpenModal(!openModal)\r\n                    }}  />\r\n                </IconButton>\r\n            </Paper>\r\n            </div>\r\n                )\r\n        }\r\n        <div>\r\n\r\n      </div>\r\n\r\n      {\r\n          openModal ? <div > <CardModal view={openModal} info={modalInfo} close={closeModalHandler} /> </div> : <p></p>\r\n      }\r\n      {\r\n          edit ? <div ><EditModal view={edit} close={closeModalHandler} profile={modalInfo} /></div>  : <p></p>\r\n      }\r\n      </div>\r\n      <div style={{marginLeft: \"35%\"}}>\r\n      <Pagination \r\n        postsPerPage={postsPerPage}\r\n        totalPosts={tableData.length}\r\n        paginate={paginate}\r\n\r\n      />\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCards\r\n"]},"metadata":{},"sourceType":"module"}